{"version":3,"sources":["aws-exports.js","src/models/index.js","src/models/schema.js","App.js","web-build/register-service-worker.js"],"names":["awsmobile","Message","initSchema","Amplify","configure","config","initialState","color","title","container","padding","paddingTop","input","marginBottom","backgroundColor","heading","fontWeight","fontSize","messageBg","messageStyle","marginTop","borderRadius","messageTitle","margin","App","useState","formState","updateFormState","messages","updateMessages","onChangeText","key","value","fetchMessages","a","async","console","log","DataStore","query","useEffect","subscription","observe","subscribe","unsubscribe","View","style","Text","TextInput","v","placeholder","autoCapitalize","Button","onPress","save","map","message","id","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.bde2263a.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://cnbctrm4rvfuplpxhqxaxha2pa.appsync-api.us-west-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-west-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-7uklx3whzfgq3f5gvnlgurdtvi\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:2f51d58b-9e20-4413-8564-50dcde1ddd30\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_VyBXq8Wyw\",\n    \"aws_user_pools_web_client_id\": \"53uubecjk0cgpsr742s6jvh4ff\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","// @ts-check\nimport { initSchema } from '@aws-amplify/datastore';\nimport { schema } from './schema';\n\n\n\nconst { Message } = initSchema(schema);\n\nexport {\n  Message\n};","export const schema = {\n    \"models\": {\n        \"Message\": {\n            \"syncable\": true,\n            \"name\": \"Message\",\n            \"pluralName\": \"Messages\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                }\n            ],\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"title\": {\n                    \"name\": \"title\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"color\": {\n                    \"name\": \"color\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                }\n            }\n        }\n    },\n    \"enums\": {},\n    \"version\": \"6be53ee48c0f3c079b9ef792c84a7d19\"\n};","import Amplify from '@aws-amplify/core'\nimport config from './aws-exports'\nAmplify.configure(config)\n\nimport React, { useState, useEffect } from 'react'\nimport { Text, View, TextInput, Button } from 'react-native'\nimport { DataStore } from '@aws-amplify/datastore'\nimport { Message} from './src/models'\n\nconst initialState = { color: 'black', title: '' }\n\nfunction App() {\n  const [formState, updateFormState] = useState(initialState)\n  const [messages, updateMessages] = useState([])\n\n  useEffect(() => {\n    console.log('useEffect')\n    fetchMessages()\n    const subscription = DataStore.observe(Message).subscribe(() => fetchMessages())\n    console.log('subscription')\n    return () => subscription.unsubscribe()\n  })\n\n  function onChangeText(key, value) {\n    updateFormState({ ...formState, [key]: value })\n  }\n\n  async function fetchMessages() {\n    console.log('fetchMessages')\n    const messages = await DataStore.query(Message)\n    console.log('query')\n    updateMessages(messages)\n  }\n  async function createMessage() {\n    if (!formState.title) return\n    await DataStore.save(new Message({ ...formState }))\n    updateFormState(initialState)\n  }\n\n  return (\n    <View style={container}>\n      <Text style={heading}>Real Time Message Board</Text>\n      <TextInput\n        onChangeText={v => onChangeText('title', v)}\n        placeholder='Message title'\n        value={formState.title}\n        style={input}\n      />\n      <TextInput\n        onChangeText={v => onChangeText('color', v)}\n        placeholder='Message color'\n        value={formState.color}\n        style={input}\n        autoCapitalize='none'\n      />\n      <Text>Color: <Text style={{fontWeight: 'bold', color: formState.color}}>{formState.color}</Text></Text>\n      <Button onPress={createMessage} title='Create Message' />\n      {\n        messages.map(message => (\n          <View key={message.id} style={{...messageStyle, backgroundColor: message.color}}>\n            <View style={messageBg}>\n              <Text style={messageTitle}>{message.title}</Text>\n            </View>\n          </View>\n        ))\n      }\n    </View>\n  )\n}\n\nconst container = { padding: 20, paddingTop: 80 }\nconst input = { marginBottom: 10, padding: 7, backgroundColor: '#ddd' }\nconst heading = { fontWeight: 'normal', fontSize: 40 }\nconst messageBg = { backgroundColor: 'white' }\nconst messageStyle = { padding: 20, marginTop: 7, borderRadius: 4 }\nconst messageTitle = { margin: 0, padding: 9, fontSize: 20  }\n\nexport default App\n\n/* Dependencies\n\"dependencies\": {\n  \"@aws-amplify/core\": \"^2.2.5\",\n  \"@aws-amplify/datastore\": \"^1.0.8\",\n  \"@react-native-community/netinfo\": \"4.6.0\",\n  \"expo\": \"~36.0.0\",\n  \"react\": \"~16.9.0\",\n  \"react-dom\": \"~16.9.0\",\n  \"react-native\": \"https://github.com/expo/react-native/archive/sdk-36.0.0.tar.gz\",\n  \"react-native-web\": \"~0.11.7\"\n}\n*/\n\n/* GraphQL Schema\ntype Message @model {\n  id: ID!\n  title: String!\n  color: String\n}\n*/","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}